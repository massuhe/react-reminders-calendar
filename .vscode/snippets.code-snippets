{
  // Place your jobsity-code-challenge workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Print to console": {
    "scope": "javascript,typescript, javascriptreact",
    "prefix": "log",
    "body": ["console.log({$1})"],
    "description": "Log output to console"
  },
  "Import emotion.sh": {
    "scope": "javascript,javascriptreact",
    "prefix": "iemo",
    "body": ["/** @jsx jsx */", "import { jsx, css } from '@emotion/core'"],
    "description": "Add necessary imports to use emotion"
  },
  "Create new React component": {
    "scope": "javascriptreact",
    "prefix": "nrc",
    "body": [
      "/** @jsx jsx */",
      "import { jsx, css } from '@emotion/core'",
      "import PropTypes from 'prop-types'",
      "",
      "const $1 = () => {",
      "  return ($2)",
      "}",
      "",
      "$1.propTypes = {",
      "",
      "}",
      "",
      "export default $1"
    ]
  },
  "Create test": {
    "scope": "javascript",
    "prefix": "ct",
    "body": [
      "import React from 'react'",
      "import { render, fireEvent } from '@testing-library/react'",
      "",
      "describe('$1', () => {",
      "it('$2', () => {",
      "})",
      "})"
    ]
  }
}
